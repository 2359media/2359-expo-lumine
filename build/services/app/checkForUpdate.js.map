{"version":3,"file":"checkForUpdate.js","sourceRoot":"","sources":["../../../src/services/app/checkForUpdate.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,SAAS,UAAU,CAAC,CAAS;IAC3B,OAAO,IAAI,OAAO,CAAO,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,UAA+B;IAClE,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,mBAAmB,EAAE,CAAC;IACnD,IAAI,MAAM,CAAC,WAAW,EAAE;QACtB,UAAU,CAAC,UAAU,CAAC,CAAC;QACvB,IAAI;YACF,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;SAClC;QAAC,MAAM,GAAE;QACV,MAAM,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5B,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC;KACrB;AACH,CAAC","sourcesContent":["import * as Updates from 'expo-updates';\n\nfunction forSeconds(s: number) {\n  return new Promise<void>(r => setTimeout(r, s * 1000));\n}\n\nexport async function checkForUpdate(updateText: (t: string) => void) {\n  const update = await Updates.checkForUpdateAsync();\n  if (update.isAvailable) {\n    updateText('Updating');\n    try {\n      await Updates.fetchUpdateAsync();\n    } catch {}\n    await Updates.reloadAsync();\n    await forSeconds(2);\n  }\n}\n"]}