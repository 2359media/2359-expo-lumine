{"version":3,"file":"AppLoading.js","sourceRoot":"","sources":["../../../src/services/app/AppLoading.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAC,eAAe,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAC;AACvD,OAAO,EAAC,IAAI,EAAC,MAAM,cAAc,CAAC;AAClC,OAAO,KAAK,YAAY,MAAM,oBAAoB,CAAC;AACnD,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,EAAC,YAAY,EAAC,MAAM,UAAU,CAAC;AAOtC,MAAM,UAAU,UAAU,CAAC,EAAC,MAAM,EAAE,QAAQ,EAAQ;IAClD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IAErC,eAAe,CAAC,GAAG,EAAE;QACnB,YAAY,CAAC,oBAAoB,EAAE;aAChC,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;aAC3D,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CACpE,OAAO,CAAC,IAAI,CAAC,CACd,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,oBAAC,IAAI,IAAC,KAAK,EAAE,MAAM,CAAC,SAAS;QAC3B,oBAAC,SAAS,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAI;QACpC,IAAI,IAAI,QAAQ,CACZ,CACR,CAAC;AACJ,CAAC;AAED,MAAM,MAAM,GAAG,YAAY,CAAC;IAC1B,SAAS,EAAE;QACT,IAAI,EAAE,CAAC;KACR;CACF,CAAC,CAAC","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport AppSplash from './AppSplash';\nimport {createStyles} from '../style';\n\ninterface Props {\n  asyncs: ((updateText: (t: string) => void) => Promise<any>)[];\n  children: any;\n}\n\nexport function AppLoading({asyncs, children}: Props) {\n  const [done, setDone] = useState(false);\n  const [text, setText] = useState('');\n\n  useLayoutEffect(() => {\n    SplashScreen.preventAutoHideAsync()\n      .then(() => setTimeout(() => SplashScreen.hideAsync(), 200))\n      .catch(() => {});\n    Promise.all(asyncs.map(a => a(setText).catch(() => {}))).finally(() =>\n      setDone(true)\n    );\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <AppSplash text={text} done={done} />\n      {done && children}\n    </View>\n  );\n}\n\nconst styles = createStyles({\n  container: {\n    flex: 1,\n  },\n});\n"]}