{"version":3,"file":"store.js","sourceRoot":"","sources":["../../../src/services/store/store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAE,SAAS,EAAC,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAC,WAAW,IAAI,gBAAgB,EAAc,MAAM,OAAO,CAAC;AACnE,OAAO,EAAC,YAAY,EAAC,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAC,WAAW,EAAE,aAAa,EAAC,MAAM,WAAW,CAAC;AACrD,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAM/B,MAAM,UAAU,WAAW,CAAmB,KAAoB;IAChE,MAAM,QAAQ,GAAS,MAAc,CAAC,4BAA4B,CAAC;IAEnE,IAAI,SAAc,CAAC;IAEnB,MAAM,KAAK,GAAG,gBAAgB,CAC5B,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,EACjC,QAAQ,IAAI,QAAQ,EAAE,CACvB,CAAC;IAEF,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAChC,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IAElC,SAAS,WAAW,CAAC,QAAwB;QAC3C,KAAK,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,SAAS,gBAAgB,CAAC,IAAiB;QACzC,MAAM,UAAU,GAAQ,EAAC,GAAG,KAAK,CAAC,YAAY,EAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,KAAK,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,SAAS,WAAW,CAAI,EAAe;QACrC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC/D,SAAS,CAAC,GAAG,EAAE;YACb,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC1B,MAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACtC,QAAQ,IAAI,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,UAAU,SAAS;QACtB,MAAM,OAAO,EAAE,CAAC;QAChB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,WAAW,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;YAC3B,SAAS,oBAAoB;gBAC3B,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE;oBACrC,WAAW,EAAE,CAAC;oBACd,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC;YACD,oBAAoB,EAAE,CAAC;YACvB,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,QAAQ;QACR,SAAS;QACT,WAAW;QACX,gBAAgB;QAChB,WAAW;QACX,SAAS;KACV,CAAC;AACJ,CAAC","sourcesContent":["import {useState, useEffect} from 'react';\nimport {createStore as createReduxStore, DeepPartial} from 'redux';\nimport {persistStore} from 'redux-persist';\nimport {actionTypes, createReducer} from './reducer';\nimport {loadEnv} from '../env';\n\ninterface StoreProps<T> {\n  initialState: T;\n}\n\nexport function createStore<T extends Object>(props: StoreProps<T>) {\n  const devTools: any = (window as any).__REDUX_DEVTOOLS_EXTENSION__;\n\n  let persistor: any;\n\n  const store = createReduxStore(\n    createReducer(props.initialState),\n    devTools && devTools()\n  );\n\n  const getState = store.getState;\n  const subscribe = store.subscribe;\n\n  function updateState(newState: DeepPartial<T>) {\n    store.dispatch({type: actionTypes.update, payload: newState});\n  }\n\n  function resetStateExcept(keys: (keyof T)[]) {\n    const resetState: any = {...props.initialState};\n    keys.forEach(k => delete resetState[k]);\n    store.dispatch({type: actionTypes.reset, payload: resetState});\n  }\n\n  function useSelector<S>(fn: (s: T) => S): S {\n    const [state, setState] = useState(() => fn(store.getState()));\n    useEffect(() => {\n      return store.subscribe(() => {\n        const newState = fn(store.getState());\n        newState != state && setState(newState);\n      });\n    }, [state]);\n    return state;\n  }\n\n  async function loadStore() {\n    await loadEnv();\n    await new Promise(resolve => {\n      persistor = persistStore(store);\n      let unsubscribe = () => {};\n      function handlePersistorState() {\n        if (persistor.getState().bootstrapped) {\n          unsubscribe();\n          resolve(true);\n        }\n      }\n      handlePersistorState();\n      unsubscribe = persistor.subscribe(handlePersistorState);\n    });\n  }\n\n  return {\n    getState,\n    subscribe,\n    updateState,\n    resetStateExcept,\n    useSelector,\n    loadStore,\n  };\n}\n"]}